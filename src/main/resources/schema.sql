create table if not exists users (
    id int generated by default as identity,
    email varchar(30) not null,
    login varchar(30) not null,
    name varchar(30) not null,
    birthday date not null,
    constraint users_pk primary key (id)
);

create table if not exists films (
     id int generated by default as identity,
     name varchar(50) not null,
     description varchar(200),
     release_date date not null,
     duration int not null,
     rating varchar(5) not null,
     constraint films_pk primary key (id)
);

create table if not exists directors (
    id int not null generated by default as identity,
    name varchar(30) not null,
    constraint directors_pk primary key (id)
);

create table if not exists film_directors (
    film_id int not null references films(id) on delete cascade,
    director_id int not null references directors(id) on delete cascade,
    constraint film_directors_pk primary key (film_id, director_id)
);

create table if not exists genres (
     id int not null generated by default as identity,
     name varchar(20) not null,
     constraint genres_pk primary key (id)
);

create table if not exists film_genres (
     film_id int not null references films(id) on delete cascade,
     genre_id int not null references genres(id) on delete cascade,
     constraint film_genres_pk primary key (film_id, genre_id)
);

create table if not exists user_friends (
     user_id int not null references users(id) on delete cascade,
     friend_id int not null references users(id) on delete cascade,
--     status varchar(10) not null,
     constraint user_friends_pk primary key (user_id, friend_id)
);

create table if not exists film_likes (
     film_id int not null references films(id) on delete cascade,
     user_id int not null references users(id) on delete cascade,
--     is_active boolean not null default true,
     constraint film_likes_pk primary key (film_id, user_id)
);

create table if not exists feed (
    event_id int generated by default as identity,
    user_id int not null,
    entity_id int not null,
    event_type varchar(50) not null,
    operation varchar(50) not null,
    timestamp bigint not null,
    constraint "feed_pk" primary key (event_id)
);

create table if not exists reviews (
     id int generated by default as identity,
     film_id int not null references films(id) on delete cascade,
     user_id int not null references users(id) on delete cascade,
     content varchar(200) not null,
     is_positive boolean not null,
     constraint reviews_pk primary key (id)
);

create table if not exists review_reactions (
     review_id int not null references reviews(id) on delete cascade,
     user_id int not null references users(id) on delete cascade,
     reaction smallint not null,
     constraint review_reactions_pk primary key (review_id, user_id)
);